C51 COMPILER V9.56.0.0   MAIN                                                              02/19/2024 18:03:15 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TA
                    -BS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "System.h"
   2          
   3          //计时变量
   4          u8 icnt;
   5          u8 keycnt,segcnt,ledcnt,bcnt;
   6          
   7          //题设变量
   8          bit mainmode = 0;//数码管显示界面切换。0:时间及湿度数据显示;  1:湿度阈值设定界面
   9          bit automode = 1;//自动手动状态切换，1时启用
  10          u8 rtc[3] = {0x08,0x30,0x00};//实时时间
  11          u8 wet,value = 50;//湿度，阈值湿度
  12          u8 temp;//设置时的阈值温度
  13          bit beepflag = 1;//蜂鸣器使能标志位
  14          bit watering = 0;//灌溉使能标志位
  15          bit warning = 0;//警报标志位
  16          u8 ledstate = 0xff;//led状态保存变量
  17          u8 ctrlstate = 0x00;//外设控制状态保存变量，不变化时不触发控制
  18          
  19          /*――软件处理函数区――*/
  20          
  21          void mInfo_Process()//系统数据处理函数
  22          {
  23   1        u8 v;
  24   1        
  25   1        if(icnt)  return;
  26   1        icnt = 1;
  27   1        
  28   1        DS1302_Read(rtc);//实时时间
  29   1        v = AD_Read(0x43);//读取Rb2电压
  30   1        wet = (v / 255.0) * 99;//电压计算转化为湿度
  31   1        
  32   1        if(automode){//自动模式
  33   2          if(wet < value) watering = 1;
  34   2          else  watering = 0;
  35   2        }
  36   1        else{//手动模式
  37   2          if(wet < value) warning = 1;
  38   2          else  warning = 0;
  39   2        }
  40   1      }
  41          
  42          
  43          /*――硬件处理函数区――*/
  44          
  45          void BTN_Process()
  46          {
  47   1        if(keycnt)  return;
  48   1        keycnt = 1;
  49   1        
  50   1        BTN_Read();
  51   1        
  52   1        if(pres == 0x01)  automode = ~automode;//按键 S7 设定为系统工作状态切换按键；
  53   1        if(automode){//自动模式
  54   2          if(pres == 0x02){
C51 COMPILER V9.56.0.0   MAIN                                                              02/19/2024 18:03:15 PAGE 2   

  55   3            mainmode = ~mainmode;//按下 S6 后，进入湿度阈值调整界面
  56   3            if(mainmode){ 
  57   4              EEPROM_Read(&value,0,2);
  58   4              temp = value;
  59   4            }
  60   3            else{
  61   4              EEPROM_Write(&temp,0,2);
  62   4              value = temp;
  63   4            }
  64   3          }
  65   2          if(mainmode){//按下 S5 为湿度阈值加 1，按下 S4 湿度阈值减 1，
  66   3            if(pres == 0x04)  temp++;
  67   3            if(pres == 0x08)  temp--;
  68   3          }
  69   2        }
  70   1        else{//手动模式
  71   2          if(pres == 0x02)  beepflag = ~beepflag;//按下 S6 关闭蜂鸣器提醒功能，再次按下 S6 打开蜂鸣器提醒功能
  72   2          if(pres == 0x04)  watering = 1;//S5 功能设定为打开灌溉系统
  73   2          if(pres == 0x08)  watering = 0;//S4 功能设定为关闭灌溉系统
  74   2        }
  75   1        
  76   1      }
  77          
  78          void SEG_Process()
  79          {
  80   1        if(segcnt)  return;
  81   1        segcnt = 1;
  82   1        
  83   1        if(~mainmode){
  84   2          seg_buf[0] = tab[rtc[0] / 16];
  85   2          seg_buf[1] = tab[rtc[0] % 16];
  86   2          seg_buf[2] = 0xbf;//"-"
  87   2          seg_buf[3] = tab[rtc[1] / 16];
  88   2          seg_buf[4] = tab[rtc[1] % 16];
  89   2          seg_buf[5] = 0xff;//熄灭
  90   2          seg_buf[6] = tab[wet / 10 % 10];
  91   2          seg_buf[7] = tab[wet % 10];
  92   2        }
  93   1        else{
  94   2          seg_buf[0] = 0xbf;//"-"
  95   2          seg_buf[1] = 0xbf;//"-"
  96   2          seg_buf[2] = 0xbf;//"-"
  97   2          seg_buf[3] = 0xff;//熄灭
  98   2          seg_buf[4] = 0xff;//熄灭
  99   2          seg_buf[5] = 0xff;//熄灭
 100   2          seg_buf[6] = tab[temp / 10 % 10];
 101   2          seg_buf[7] = tab[temp % 10];
 102   2        }
 103   1      }
 104          
 105          void LED_Process()
 106          {
 107   1        u8 led;
 108   1        
 109   1        if(ledcnt)  return;
 110   1        ledcnt = 1;
 111   1        
 112   1        if(automode)  led = 0xfe;
 113   1        else led = 0xfd;
 114   1        
 115   1        if(ledstate != led){
 116   2          ledstate = led;
C51 COMPILER V9.56.0.0   MAIN                                                              02/19/2024 18:03:15 PAGE 3   

 117   2          Device_Ctrl(0x80,led);
 118   2        }
 119   1      }
 120          
 121          void BEEP_Process()
 122          {
 123   1        u8 ctrl = 0x00;//继电器蜂鸣器控制
 124   1        
 125   1        if(bcnt)  return;
 126   1        bcnt = 1;
 127   1        
 128   1        if(watering)  ctrl |= 0x10;
 129   1        if(~automode && beepflag && warning)  ctrl |= 0x40;
 130   1        
 131   1        if(ctrl != ctrlstate){//有变化时进入
 132   2          ctrlstate = ctrl;
 133   2          Device_Ctrl(0xa0,ctrl);
 134   2        }
 135   1      }
 136          
 137          //主函数
 138          void main()
 139          {
 140   1        Timer0_Init();
 141   1        Device_Init();
 142   1        DS1302_Set(rtc);
 143   1      //  EEPROM_Write(&value,0,2);
 144   1        
 145   1        while(1)
 146   1        {
 147   2          mInfo_Process();
 148   2          
 149   2          BTN_Process();
 150   2          SEG_Process();
 151   2          LED_Process();
 152   2          BEEP_Process();
 153   2        }
 154   1      }
 155          
 156          //中断区
 157          void T0ISR(void) interrupt 1
 158          {
 159   1        if(++ledcnt >= 10)  ledcnt = 0;
 160   1        if(++keycnt >= 10)  keycnt = 0;
 161   1        if(++icnt >= 100)   icnt = 0;
 162   1        if(++segcnt >= 200) segcnt = 0;
 163   1        if(++bcnt >= 200)   bcnt = 0;
 164   1        
 165   1        SEG_Display();
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    532    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
