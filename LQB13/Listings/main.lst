C51 COMPILER V9.56.0.0   MAIN                                                              03/03/2024 20:22:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TA
                    -BS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "System.h"
   2          
   3          //定时变量
   4          u8 icnt;
   5          u8 kbdcnt,segcnt,ledcnt,rcnt;
   6          bit flash = 1;//闪烁标志位
   7          
   8          //题设变量
   9          float temper;//当前温度
  10          u8 tempset = 23;//温度参数
  11          u8 rtc[3] = {0x23,0x59,0x50};//实时时间
  12          u8 mode = 1;//数码管显示主模式，1：温度显示界面；2：时间显示界面；3：参数设置界面
  13          bit ctrlmode;//控制工作模式切换。0：温度控制；1：时间控制
  14          bit timemode;//时间显示模式。0：显示时分；1：显示分秒
  15          bit relay;//继电器吸合状态标志
  16          bit sharp;//整点标志，持续5s
  17          bit rflag = 1;//继电器函数标志位，非触发状态为1
  18          
  19          
  20          void mInfo_Process()
  21          {
  22   1        if(icnt)  return;
  23   1        icnt = 1;
  24   1        
  25   1        DS1302_Read(rtc);
  26   1        temper = Read_Temper();
  27   1        
  28   1        if(~sharp && rtc[1] == 0 && rtc[2] < 0x05)
  29   1          sharp = 1;
  30   1        else if(sharp && rtc[2] >= 0x05)
  31   1          sharp = 0;
  32   1        
  33   1        if(ctrlmode){
  34   2          if(~relay && rtc[1] == 0 && rtc[2] < 0x05)
  35   2            relay = 1;
  36   2          else if(relay && rtc[2] >= 0x05)
  37   2            relay = 0;
  38   2        }
  39   1        else{
  40   2          if(~relay && temper > tempset)
  41   2            relay = 1;
  42   2          else if(relay && temper <= tempset)
  43   2            relay = 0;
  44   2        }
  45   1      }
  46          
  47          
  48          void KBD_Process()
  49          {
  50   1        if(kbdcnt)  return;
  51   1        kbdcnt = 1;
  52   1        
  53   1        KBD_Read();
  54   1        
C51 COMPILER V9.56.0.0   MAIN                                                              03/03/2024 20:22:33 PAGE 2   

  55   1        if(pres == 0x28){//S12：定义为“切换”按键
  56   2          if(mode == 3) mode = 1;
  57   2          else  mode++;
  58   2          return;
  59   2        }
  60   1        
  61   1        if(pres == 0x24)//S13：定义为“模式”按键
  62   1          ctrlmode = ~ctrlmode;
  63   1        
  64   1        if(mode == 2){
  65   2          if(cont == 0x14)
  66   2            timemode = 1;
  67   2          else
  68   2            timemode = 0;
  69   2        }
  70   1        
  71   1        if(mode == 3){
  72   2          if(pres == 0x18)//S16：定义为“加”按键
  73   2            if(tempset < 99)  tempset++;
  74   2          if(pres == 0x14)//S17：定义为“减”按键
  75   2            if(tempset > 10)  tempset--;
  76   2        }
  77   1        
  78   1      }
  79          
  80          void SEG_Process()
  81          {
  82   1        if(segcnt)  return;
  83   1        segcnt = 1;
  84   1        
  85   1        seg_buf[0] = 0xc1;//"U"
  86   1        seg_buf[1] = tab[mode];
  87   1        switch(mode){
  88   2          case 1:{
  89   3            seg_buf[2] = 0xff;
  90   3            seg_buf[3] = 0xff;
  91   3            seg_buf[4] = 0xff;
  92   3            seg_buf[5] = tab[(u8)(temper /10) %10];
  93   3            seg_buf[6] = tab[(u8)temper %10] & 0x7f;
  94   3            seg_buf[7] = tab[(u8)(temper *10) %10];
  95   3          }break;
  96   2          case 2:{
  97   3            seg_buf[2] = 0xff;
  98   3            if(~timemode){
  99   4              seg_buf[3] = tab[rtc[0] / 16];
 100   4              seg_buf[4] = tab[rtc[0] % 16];
 101   4              seg_buf[5] = 0xbf;//"-"
 102   4              seg_buf[6] = tab[rtc[1] / 16];
 103   4              seg_buf[7] = tab[rtc[1] % 16];
 104   4            }
 105   3            else{
 106   4              seg_buf[3] = tab[rtc[1] / 16];
 107   4              seg_buf[4] = tab[rtc[1] % 16];
 108   4              seg_buf[5] = 0xbf;//"-"
 109   4              seg_buf[6] = tab[rtc[2] / 16];
 110   4              seg_buf[7] = tab[rtc[2] % 16];
 111   4            }
 112   3          }break;
 113   2          case 3:{
 114   3            seg_buf[2] = 0xff;
 115   3            seg_buf[3] = 0xff;
 116   3            seg_buf[4] = 0xff;
C51 COMPILER V9.56.0.0   MAIN                                                              03/03/2024 20:22:33 PAGE 3   

 117   3            seg_buf[5] = 0xff;
 118   3            seg_buf[6] = tab[tempset /10];
 119   3            seg_buf[7] = tab[tempset %10];
 120   3          }break;
 121   2        }
 122   1      }
 123          
 124          void LED_Process()
 125          {
 126   1        u8 led = 0xff;
 127   1        
 128   1        if(ledcnt)  return;
 129   1        ledcnt = 1;
 130   1        
 131   1        if(sharp)     led &= 0xfe;
 132   1        if(~ctrlmode) led &= 0xfd;
 133   1        if(relay && flash)
 134   1          led &= 0xfb;
 135   1        
 136   1        Device_Ctrl(0x80,led);
 137   1      }
 138          
 139          void Relay_Process()
 140          {
 141   1        if(rcnt)  return;
 142   1        rcnt = 1;
 143   1        
 144   1        if(relay && rflag){
 145   2          Device_Ctrl(0xa0,0x10);
 146   2          rflag = 0;
 147   2        }
 148   1        else if(~relay && ~rflag){
 149   2          Device_Ctrl(0xa0,0x00);
 150   2          rflag = 1;
 151   2        }
 152   1      }
 153          
 154          
 155          void Delay750ms(void) //@12.000MHz
 156          {
 157   1        unsigned char data i, j, k;
 158   1      
 159   1        _nop_();
 160   1        _nop_();
 161   1        i = 35;
 162   1        j = 51;
 163   1        k = 182;
 164   1        do
 165   1        {
 166   2          do
 167   2          {
 168   3            while (--k);
 169   3          } while (--j);
 170   2        } while (--i);
 171   1      }
 172          void main()
 173          {
 174   1        Read_Temper();
 175   1        Delay750ms();//防止读到脏东西
 176   1        
 177   1        Timer2_Init();
 178   1        Device_Init();
C51 COMPILER V9.56.0.0   MAIN                                                              03/03/2024 20:22:33 PAGE 4   

 179   1        DS1302_Set(rtc);
 180   1        while(1)
 181   1        {
 182   2          mInfo_Process();
 183   2          
 184   2          KBD_Process();
 185   2          SEG_Process();
 186   2          LED_Process();
 187   2          Relay_Process();
 188   2        }
 189   1      }
 190          
 191          void I2ISR()  interrupt 12
 192          {
 193   1        static u8 cnt;
 194   1        SEG_Display();
 195   1        
 196   1        if(++icnt >= 50)    icnt = 0;
 197   1        if(++kbdcnt >= 10)  kbdcnt = 0;
 198   1        if(++segcnt >= 200) segcnt = 0;
 199   1        if(++ledcnt >= 10)  ledcnt = 0;
 200   1        if(++rcnt >= 10)    rcnt = 0;
 201   1        
 202   1        if(relay){
 203   2          if(++cnt >= 100){
 204   3            flash = ~flash;
 205   3            cnt = 0;
 206   3          }
 207   2        }
 208   1        else if(cnt)
 209   1          cnt = 0;
 210   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    767    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
