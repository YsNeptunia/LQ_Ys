C51 COMPILER V9.56.0.0   MAIN                                                              03/10/2024 15:34:46 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TA
                    -BS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "System.h"
   2          
   3          //∂® ±±‰¡ø
   4          u8 icnt;
   5          u8 keycnt,segcnt,ledcnt;
   6          bit flash;
   7          
   8          //Ã‚…Ë±‰¡ø
   9          u8 mode = 1;// ˝¬Îπ‹œ‘ æΩÁ√Ê«–ªª£¨1°¢≤‚æ‡ΩÁ√Ê£ª2°¢≤Œ ˝ΩÁ√Ê£ª3°¢º«¬ºΩÁ√Ê
  10          bit setmode;//≤Œ ˝ΩÁ√Êœ¬µƒ ‰»Îƒ£ Ω«–ªª£¨0£∫∞¥º¸ƒ£ Ω£ª1£∫–˝≈•ƒ£ Ω
  11          u8 dist;//≥¨…˘≤®≤‚µ√æ‡¿Î
  12          u8 PH = 60,PL = 10;//≤Œ ˝…œœ¬œﬁ
  13          u8 vin;//¡Ÿ ±¥¢¥ÊµÁ—π ˝æ›£¨‘⁄º¸≈Ã∫Ø ˝◊™ªØŒ™≤Œ ˝
  14          u8 Ecnt = 0;//±®æØ¥Œ ˝
  15          bit warning = 0;//±®æØ¥•∑¢±Í÷æŒª£¨°∞≤Œ ˝œ¬œﬁ°‹≤‚¡øµƒæ‡¿Î÷µ°‹≤Œ ˝…œœﬁ°±±‰Œ™°∞≤‚¡øµƒæ‡¿Î÷µ>≤Œ ˝…œœﬁ°±ªÚ°∞≤‚¡
             -øµƒæ‡¿Î÷µ<≤Œ ˝œ¬œﬁ°± ±÷√1
  16          
  17          void mInfo_Process()
  18          {
  19   1        u8 v,temp;
  20   1        if(icnt)  return;
  21   1        icnt = 1;
  22   1        
  23   1        temp = Ultra_Read();
  24   1        if(temp)  dist = temp;
  25   1        if(setmode){
  26   2          v = AD_Read(0x43);
  27   2          if(v < 51)        vin = 0;
  28   2          else if(v < 102)  vin = 1;
  29   2          else if(v < 153)  vin = 2;
  30   2          else if(v < 204)  vin = 3;
  31   2          else              vin = 4;
  32   2        }
  33   1        
  34   1        if(warning == 0 && (dist < PL || dist > PH)){
  35   2          warning = 1;
  36   2          Ecnt++;
  37   2        }
  38   1        if(warning && (dist >= PL && dist <= PH))
  39   1          warning = 0;
  40   1      }
  41          
  42          void mPset(bit HL)//≤Œ ˝–˝≈•…Ë÷√
  43          {
  44   1        if(HL){
  45   2          switch(vin){
  46   3            case 0:PH=50;break;
  47   3            case 1:PH=60;break;
  48   3            case 2:PH=70;break;
  49   3            case 3:PH=80;break;
  50   3            case 4:PH=90;break;
  51   3          }
  52   2        }
  53   1        else{
C51 COMPILER V9.56.0.0   MAIN                                                              03/10/2024 15:34:46 PAGE 2   

  54   2          switch(vin){
  55   3            case 0:PL=0;break;
  56   3            case 1:PL=10;break;
  57   3            case 2:PL=20;break;
  58   3            case 3:PL=30;break;
  59   3            case 4:PL=40;break;
  60   3          }
  61   2        }
  62   1      }
  63          
  64          void KBD_Process()
  65          {
  66   1        if(keycnt)  return;
  67   1        keycnt = 1;
  68   1        
  69   1        KBD_Read();
  70   1        
  71   1        if(pres == 0x88){//S4£∫∂®“ÂŒ™°∞«–ªª°±£¨∞¥œ¬S4∞¥º¸£¨«–ªª°∞≤‚æ‡ΩÁ√Ê°±°¢°∞≤Œ ˝ΩÁ√Ê°±∫Õ°∞º«¬ºΩÁ√Ê°±°£
  72   2          if(mode != 3) mode++;
  73   2          else  mode = 1;
  74   2          return;
  75   2        }
  76   1        
  77   1        if(mode == 2){
  78   2          if(pres == 0x84){//S5£∫‘⁄°∞≤Œ ˝ΩÁ√Ê°±œ¬£¨∂®“ÂŒ™°∞ƒ£ Ω°±£¨∞¥œ¬∞¥º¸S5£¨«–ªª≤Œ ˝µ˜’˚ƒ£ Ω°£
  79   3            setmode = ~setmode;
  80   3            return;
  81   3          }
  82   2          if(~setmode){
  83   3            if(pres == 0x44){//S9:°∞…œœﬁµ˜’˚°±
  84   4              if(PH == 90)  PH = 50;
  85   4              else  PH += 10;
  86   4              return;
  87   4            }
  88   3            if(pres == 0x48){//S8:°∞œ¬œﬁµ˜’˚°±
  89   4              if(PL == 40)  PL = 0;
  90   4              else  PL += 10;
  91   4              return;
  92   4            }
  93   3          }
  94   2          else{
  95   3            if(pres == 0x44){//S9:°∞…œœﬁµ˜’˚°±
  96   4              mPset(1);
  97   4              return;
  98   4            }
  99   3            if(pres == 0x48){//S8:°∞œ¬œﬁµ˜’˚°±
 100   4              mPset(0);
 101   4              return;
 102   4            }
 103   3          }
 104   2        }
 105   1        
 106   1        if(mode == 3){
 107   2          if(pres == 0x84){//S5£∫‘⁄°∞º«¬ºΩÁ√Êœ¬°±£¨∂®“ÂŒ™°∞«Â¡„°±£¨∞¥œ¬∞¥º¸S5£¨«Â¡„µ±«∞µƒ±®æØ¥Œ ˝°£
 108   3            Ecnt = 0;
 109   3            return;
 110   3          }
 111   2        }
 112   1      }
 113          
 114          void SEG_Process()
 115          {
C51 COMPILER V9.56.0.0   MAIN                                                              03/10/2024 15:34:46 PAGE 3   

 116   1        if(segcnt)  return;
 117   1        segcnt = 1;
 118   1        
 119   1        switch(mode){
 120   2          case 1:{//≤‚æ‡ΩÁ√Ê
 121   3            seg_buf[0] = tab[10];//"A"
 122   3            seg_buf[1] = 0xff;
 123   3            seg_buf[2] = 0xff;
 124   3            seg_buf[3] = 0xff;
 125   3            seg_buf[4] = 0xff;
 126   3            seg_buf[5] = (dist / 100 % 10)?tab[(u8)(dist / 100 % 10)]:0xff;
 127   3            seg_buf[6] = tab[(u8)(dist / 10 % 10)];
 128   3            seg_buf[7] = tab[(u8)(dist % 10)];
 129   3          }break;
 130   2          
 131   2          case 2:{//≤Œ ˝ΩÁ√Ê
 132   3            seg_buf[0] = 0x8c;//"P"
 133   3            seg_buf[1] = setmode?tab[2]:tab[1];
 134   3            seg_buf[2] = 0xff;
 135   3            seg_buf[3] = tab[PL/10];
 136   3            seg_buf[4] = tab[PL%10];
 137   3            seg_buf[5] = 0xbf;//"-"
 138   3            seg_buf[6] = tab[PH/10];
 139   3            seg_buf[7] = tab[PH%10];
 140   3          }break;
 141   2          
 142   2          case 3:{//≤Œ ˝ΩÁ√Ê
 143   3            seg_buf[0] = tab[14];//"E"
 144   3            seg_buf[1] = 0Xff;
 145   3            seg_buf[2] = 0xff;
 146   3            seg_buf[3] = 0xff;
 147   3            seg_buf[4] = 0xff;
 148   3            seg_buf[5] = 0xff;
 149   3            seg_buf[6] = 0xff;
 150   3            seg_buf[7] = (Ecnt > 9)?0xbf:tab[Ecnt];
 151   3          }break;
 152   2        }
 153   1      }
 154          
 155          void LED_Process()
 156          {
 157   1        u8 led = 0xff;
 158   1        
 159   1        if(ledcnt)  return;
 160   1        ledcnt = 1;
 161   1        
 162   1        switch(mode){
 163   2          case 1:led &= 0xfe;break;
 164   2          case 2:led &= 0xfd;break;
 165   2          case 3:led &= 0xfb;break;
 166   2        }
 167   1        if(~warning && flash) led &= 0x7f;
 168   1        else if(warning)  led &= 0x7f;
 169   1        
 170   1        Device_Ctrl(0x80,led);
 171   1      }
 172          
 173          void main()
 174          {
 175   1        Timer0_Init();
 176   1        Device_Init();
 177   1        
C51 COMPILER V9.56.0.0   MAIN                                                              03/10/2024 15:34:46 PAGE 4   

 178   1        while(1)
 179   1        {
 180   2          mInfo_Process();
 181   2          
 182   2          KBD_Process();
 183   2          SEG_Process();
 184   2          LED_Process();
 185   2        }
 186   1      }
 187          
 188          void T0ISR(void) interrupt 1
 189          {
 190   1        SEG_Display();
 191   1        
 192   1        if(++icnt >= 100) {icnt = 0;flash = ~flash;}
 193   1        if(++keycnt >= 10)  keycnt = 0;
 194   1        if(++segcnt >= 200) segcnt = 0;
 195   1        if(++ledcnt >= 10)  ledcnt = 0;
 196   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    710    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
