C51 COMPILER V9.56.0.0   EEPROM                                                            02/04/2024 18:05:12 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\EEPROM.obj
COMPILER INVOKED BY: D:\C51\BIN\C51.EXE EEPROM.c COMPACT OPTIMIZE(8,SPEED) BROWSE MODP2 DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\EEPROM.lst) TABS(2) OBJECT(.\Objects\EEPROM.obj)

line level    source

   1          #include "EEPROM.h"
   2          
   3          static void I2C_Delay(unsigned char n)
   4          {
   5   1          do{_nop_();}
   6   1          while(n--);       
   7   1      }
   8          
   9          void EEPROM_Write(u8* dat,u8 addr,u8 num)//形参：将要写入的字符串；写入的地址（8倍数）；写入的数量
  10          {
  11   1        I2CStart();
  12   1        I2CSendByte(0xa0);//选择AT24C02芯片，写模式
  13   1        I2CWaitAck();
  14   1        
  15   1        I2CSendByte(addr);//选择写入的地址
  16   1        I2CWaitAck();
  17   1        
  18   1        while(num--){
  19   2          I2CSendByte(*dat++);//写入数据
  20   2          I2CWaitAck();
  21   2          I2C_Delay(200);
  22   2        }
  23   1        
  24   1        I2CStop();
  25   1      }
  26          
  27          void EEPROM_Read(u8* dat,u8 addr,u8 num)//形参：将要读出的字符串；读的地址（8倍数）；读的数量
  28          {
  29   1        I2CStart();
  30   1        I2CSendByte(0xa0);//选择AT24C02芯片，写模式
  31   1        I2CWaitAck();
  32   1        
  33   1        I2CSendByte(addr);//选择写入的地址
  34   1        I2CWaitAck();
  35   1        
  36   1        I2CStart();
  37   1        I2CSendByte(0xa1);//选择AT24C02芯片，读模式
  38   1        I2CWaitAck();
  39   1        
  40   1        while(num--){
  41   2          *dat++ = I2CReceiveByte();
  42   2          if(num) I2CSendAck(0);//继续读，发送应答
  43   2          else  I2CSendAck(1);//不应答
  44   2        }
  45   1        
  46   1        I2CStop();
  47   1      }
  48          
  49          ////函数名：写EEPROM函数
  50          ////入口参数：需要写入的字符串，写入的地址(务必为8的倍数)，写入数量
  51          ////返回值：无
  52          ////函数功能：向EERPOM的某个地址写入字符串中特定数量的字符。
  53          //void EEPROM_Write(unsigned char* EEPROM_String, unsigned char addr, unsigned char num)
  54          //{
C51 COMPILER V9.56.0.0   EEPROM                                                            02/04/2024 18:05:12 PAGE 2   

  55          //  IIC_Start();//发送开启信号
  56          //  IIC_SendByte(0xA0);//选择EEPROM芯片，确定写的模式
  57          //  IIC_WaitAck();//等待EEPROM反馈
  58          //  
  59          //  IIC_SendByte(addr);//写入要存储的数据地址
  60          //  IIC_WaitAck();//等待EEPROM反馈    
  61          
  62          //  while(num--)
  63          //  {
  64          //    IIC_SendByte(*EEPROM_String++);//将要写入的信息写入
  65          //    IIC_WaitAck();//等待EEPROM反馈    
  66          //    IIC_Delay(200); 
  67          //  }
  68          //  IIC_Stop();//停止发送 
  69          //}
  70          
  71          
  72          ////函数名：读EEPROM函数
  73          ////入口参数：读到的数据需要存储的字符串，读取的地址(务必为8的倍数)，读取的数量
  74          ////返回值：无
  75          ////函数功能：读取EERPOM的某个地址中的数据，并存放在字符串数组中。
  76          //void EEPROM_Read(unsigned char* EEPROM_String, unsigned char addr, unsigned char num)
  77          //{
  78          //  IIC_Start();//发送开启信号
  79          //  IIC_SendByte(0xA0);//选择EEPROM芯片，确定写的模式
  80          //  IIC_WaitAck();//等待EEPROM反馈
  81          //  
  82          //  IIC_SendByte(addr);//写入要读取的数据地址
  83          //  IIC_WaitAck();//等待EEPROM反馈    
  84          
  85          //  IIC_Start();//发送开启信号
  86          //  IIC_SendByte(0xA1);//选择EEPROM芯片，确定读的模式
  87          //  IIC_WaitAck();//等待EEPROM反馈  
  88          //  
  89          //  while(num--)
  90          //  {
  91          //    *EEPROM_String++ = IIC_RecByte();//将要写入的信息写入
  92          //    if(num) IIC_SendAck(0);//发送应答
  93          //      else IIC_SendAck(1);//不应答
  94          //  }
  95          //  
  96          //  IIC_Stop();//停止发送 
  97          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    185    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      10
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
